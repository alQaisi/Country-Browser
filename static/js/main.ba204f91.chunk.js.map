{"version":3,"sources":["components/Header/Header.js","components/Filter/Filter.js","components/ScrollArrow/ScrollArrow.js","constants.js","App.js","actions.js","FetchActions.js","serviceWorker.js","reducers.js","index.js"],"names":["Header","this","props","colorMode","darkModeEvent","className","onClick","bind","aria-label","PureComponent","Filter","onInputChange","selectValue","onChange","type","placeholder","value","ScrollArrow","useState","showScroll","setShowScroll","window","addEventListener","pageYOffset","scrollTo","top","behavior","style","display","actionsTypes","CHANGE_SEARCHBOX","DARKMODE_EVENT","CHANGE_LIST","CLICK_BACK","FETCH_COUNTRIES","FETCH_COUNTRY","FETCH_BORDERS","CountriesContainer","React","lazy","CountryPage","App","fetchCountries","title","nameFilter","slideMethod","onBackClick","data","borders","inPage","currentCountry","onCountryClick","filterdCountries","filter","country","name","toLowerCase","includes","region","Helmet","charSet","fallback","allCountries","Component","connect","state","uiReducer","dataReducer","dispatch","event","text","target","payload","prevMode","localStorage","setItem","document","activeElement","blur","getElementById","focus","body","overflowY","fetch","then","response","json","APIdata","catch","error","alert","alpha2Code","position","map","border","Promise","all","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","uiState","getItem","dataState","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","URL","process","href","origin","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ba204f91.chunk.js","sourcesContent":["import React,{PureComponent} from 'react';\r\nimport './Header.css';\r\nimport { RiMoonLine,RiMoonFill} from \"react-icons/ri\";\r\nclass Header extends PureComponent{\r\n    render(){\r\n        const {colorMode,darkModeEvent}=this.props;\r\n        return(\r\n            <div className={\"Header \"+colorMode}>\r\n                <div className=\"headerContainer\">\r\n                    <p className=\"title\">Where in the world?</p>\r\n                    <div className=\"buttonContainer\" onClick={darkModeEvent.bind(this,colorMode)}>\r\n                      {\r\n                      colorMode==='dark'\r\n                      ?<button aria-label=\"dark moode button\" className=\"darkmode-button darkButton\"><RiMoonFill/></button>\r\n                      :<button aria-label=\"dark moode button\" className=\"darkmode-button\"><RiMoonLine/></button>\r\n                      }\r\n                    <p>Dark Mode</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import React,{PureComponent} from 'react';\r\nimport './Filter.css';\r\nimport {BiSearch} from 'react-icons/bi';\r\nclass Filter extends PureComponent{\r\n    render(){\r\n        const {colorMode,onInputChange,selectValue,onChange}=this.props;\r\n        return (\r\n            <div className={\"FilterContainer\"}>\r\n                <div className={\"searchBar \" +colorMode+\"-searchBar\"}>\r\n                <BiSearch className={\"searchIcon \"+colorMode+'-searchIcon'}/>\r\n                <input aria-label=\"Search Box\" type=\"text\" className=\"SearchField\" placeholder=\"Search for a country\" onChange={onInputChange}/>\r\n                </div>\r\n                <select aria-label=\"Select Region\" className={\"selectRegion \"+colorMode+\"-selectRegion\"} value={selectValue}  onChange={onChange}>\r\n                        <option value=\"1\">Filter by Region</option>\r\n                        <option value=\"Africa\">Africa</option>\r\n                        <option value=\"Americas\">Americas</option>\r\n                        <option value=\"Asia\">Asia</option>\r\n                        <option value=\"Europe\">Europe</option>\r\n                        <option value=\"Oceania\">Oceania</option>\r\n                    </select>\r\n            </div>\r\n          );\r\n    }\r\n}\r\nexport default Filter;","import React,{useState} from 'react';\r\nimport {IoIosArrowDropupCircle} from 'react-icons/io';\r\nimport './ScrollArrow.css';\r\nconst ScrollArrow=(props)=>{\r\n    const [showScroll,setShowScroll]=useState(false);\r\n    const {colorMode}=props;\r\n    const checkScrollTop=()=>{\r\n        if(!showScroll && window.pageYOffset>400){\r\n            setShowScroll(true);\r\n        }else if(showScroll && window.pageYOffset<=400){\r\n            setShowScroll(false);\r\n        }\r\n    };\r\n    const scrollTop=()=>{\r\n        window.scrollTo({top:0,behavior:'smooth'});\r\n    }\r\n    window.addEventListener('scroll',checkScrollTop);\r\n    return(\r\n        <IoIosArrowDropupCircle className={`scrollTop ${colorMode}-arrow`} onClick={scrollTop} style={{display: showScroll ? 'block' : 'none'}}/>\r\n    )\r\n}\r\nexport default ScrollArrow;","const actionsTypes={\r\n    CHANGE_SEARCHBOX:\"CHANGE_SEARCHBOX\",\r\n    DARKMODE_EVENT:\"DARKMODE_EVENT\",\r\n    CHANGE_LIST:'CHANGE_LIST',\r\n    CLICK_BACK:'CLICK_BACK',\r\n    FETCH_COUNTRIES:'FETCH_COUNTRIES',\r\n    FETCH_COUNTRY:'FETCH_COUNTRY',\r\n    FETCH_BORDERS:'FETCH_BORDERS',\r\n}\r\nexport default actionsTypes;\r\n","import React,{Component, Suspense} from 'react';\r\nimport './App.css';\r\nimport Helmet from \"react-helmet\";\r\nimport Header from './components/Header/Header';\r\nimport Filter from './components/Filter/Filter';\r\nimport ScrollArrow from './components/ScrollArrow/ScrollArrow';\r\nimport {setSearchBox,darkModeEvent,onChange,onBackClick} from './actions';\r\nimport {fetchCountries,onCountryClick} from './FetchActions';\r\nimport {connect} from 'react-redux';\r\nconst CountriesContainer=React.lazy(()=>import('./components/country/CountriesContainer'));\r\nconst CountryPage=React.lazy(()=>import('./components/country/CountryPage/CountryPage'));\r\nconst mapStateToProps=state=>{\r\n  return{\r\n    nameFilter:state.uiReducer.nameFilter,\r\n    colorMode:state.uiReducer.colorMode,\r\n    selectValue:state.uiReducer.selectValue,\r\n    slideMethod:state.dataReducer.slideMethod,\r\n    data:state.dataReducer.data,\r\n    currentCountry:state.dataReducer.currentCountry,\r\n    inPage:state.dataReducer.inPage,\r\n    borders:state.dataReducer.borders,\r\n    title:state.dataReducer.title\r\n  }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n  return {\r\n    onInputChange:(event)=>dispatch(setSearchBox(event.target.value)),\r\n    darkModeEvent:(colorMode)=>dispatch(darkModeEvent(colorMode)),\r\n    onChange:(event)=>dispatch(onChange(event.target.value)),\r\n    onBackClick:()=>dispatch(onBackClick()),\r\n    fetchCountries:()=>dispatch(fetchCountries()),\r\n    onCountryClick:(alpha2Code,position)=>dispatch(onCountryClick(alpha2Code,position))\r\n  }\r\n}\r\nclass App extends Component{\r\n  componentDidMount(){\r\n    this.props.fetchCountries();\r\n  }\r\n  render(){\r\n    const {title,nameFilter,onInputChange,colorMode,darkModeEvent,selectValue,onChange,slideMethod,onBackClick,data,borders,inPage,currentCountry,onCountryClick}=this.props;\r\n    let filterdCountries=data.filter(country=>{\r\n      if(selectValue===\"1\"){\r\n        return (country.name.toLowerCase().includes(nameFilter.toLowerCase()));\r\n      }else{\r\n        return (country.name.toLowerCase().includes(nameFilter.toLowerCase()) && country.region===selectValue);\r\n      }\r\n    })\r\n    return (\r\n      <div className={\"App \" +colorMode+\"-App\"}>\r\n        <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>{title}</title>\r\n        </Helmet>\r\n        <Header colorMode={colorMode} darkModeEvent={darkModeEvent}/>\r\n        <Filter colorMode={colorMode} onInputChange={onInputChange} selectValue={selectValue} onChange={onChange}/>\r\n        <Suspense fallback={<h1>Loading Countries</h1>}>\r\n        <CountriesContainer data={filterdCountries} colorMode={colorMode} onCountryClick={onCountryClick} allCountries={data}/>\r\n        </Suspense>\r\n          \r\n        {inPage===true\r\n          ?(\r\n            <Suspense fallback={<>Loading...</>}>\r\n              <CountryPage slideMethod={slideMethod} onCountryClick={onCountryClick} borders={borders} onBackClick={onBackClick} colorMode={colorMode} currentCountry={currentCountry}/>\r\n            </Suspense>\r\n          )\r\n        :null\r\n        }\r\n        <ScrollArrow colorMode={colorMode}/>\r\n      </div>\r\n    );\r\n  } \r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\r\n","import actionsTypes from './constants';\r\nexport const setSearchBox=(text)=>({\r\n    type:actionsTypes.CHANGE_SEARCHBOX,\r\n    payload:text\r\n});\r\nexport const darkModeEvent=(prevMode)=>{\r\n    switch(prevMode){\r\n        case 'dark':\r\n            localStorage.setItem('theme','light');\r\n            return{\r\n                type:actionsTypes.DARKMODE_EVENT,\r\n                payload:\"light\"\r\n            };\r\n        default:\r\n            localStorage.setItem('theme','dark');\r\n            return{\r\n                type:actionsTypes.DARKMODE_EVENT,\r\n                payload:\"dark\"\r\n            }\r\n    }\r\n}\r\nexport const onChange=(text)=>({\r\n    type:actionsTypes.CHANGE_LIST,\r\n    payload:text\r\n})\r\nexport const onBackClick=()=>{\r\n    if (document.activeElement) {\r\n      document.activeElement.blur();\r\n      const CountriesContainer=document.getElementById(\"CountriesContainer\");\r\n      CountriesContainer.focus();\r\n      document.body.style.overflowY=\"auto\";\r\n    }\r\n    return{\r\n    type:actionsTypes.CLICK_BACK,\r\n    payload:\"slide-out\"\r\n    }\r\n};\r\n","import actionsTypes from './constants';\r\nexport const fetchCountries=()=>(dispatch)=>{\r\n    fetch(\"https://restcountries.eu/rest/v2/all\")\r\n    .then(response=>response.json())\r\n    .then(APIdata=>dispatch({\r\n        type:actionsTypes.FETCH_COUNTRIES,\r\n        payload:APIdata\r\n    })).catch(error=>alert('Somthing Wrong,check your internet connection or please come later'));\r\n};\r\nexport const onCountryClick=(alpha2Code,position)=>(dispatch)=>{\r\n    if(position==='out'){\r\n        dispatch({\r\n            type:actionsTypes.FETCH_COUNTRY,\r\n            payload:{inPage:false,currentCountry:{}}\r\n        });\r\n    }\r\n    fetch(`https://restcountries.eu/rest/v2/alpha/${alpha2Code}`)\r\n    .then(response=>response.json())\r\n    .then(APIdata=>{\r\n        const borders=APIdata.borders.map(border=>`https://restcountries.eu/rest/v2/alpha/${border}`)\r\n        Promise.all(borders.map(border=>fetch(border).then(response=>response.json())))\r\n        .then(data=>dispatch({type:actionsTypes.FETCH_BORDERS,payload:data})).catch(error=>dispatch({type:actionsTypes.FETCH_BORDERS,payload:[]}));\r\n      dispatch(\r\n          {type:actionsTypes.FETCH_COUNTRY,payload:{\r\n            currentCountry:APIdata,inPage:true,slideMethod:'',title:APIdata.name\r\n          }\r\n        })}).catch(error=>dispatch({type:actionsTypes.FETCH_COUNTRY,payload:{}}));\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import actionsTypes from './constants';\r\nconst uiState={\r\n    colorMode:localStorage.getItem('theme'),\r\n    nameFilter:'',\r\n    selectValue:\"1\",\r\n};\r\nconst dataState={\r\n    data:[],\r\n    currentCountry:{},\r\n    borders:[],\r\n    inPage:false,\r\n    slideMethod:'',\r\n    title:'Countries Browser'\r\n}\r\nexport const uiReducer=(state=uiState,action={})=>{\r\n    switch(action.type){\r\n        case actionsTypes.CHANGE_SEARCHBOX:\r\n            return Object.assign({},state,{nameFilter:action.payload});\r\n        case actionsTypes.DARKMODE_EVENT:\r\n            return Object.assign({},state,{colorMode:action.payload});\r\n        case actionsTypes.CHANGE_LIST:\r\n            return Object.assign({},state,{selectValue:action.payload});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const dataReducer=(state=dataState,action={})=>{\r\n    switch(action.type){\r\n        case actionsTypes.CLICK_BACK:\r\n            return Object.assign({},state,{slideMethod:action.payload,title:\"Countries Browser\"});\r\n        case actionsTypes.FETCH_COUNTRIES:\r\n            return Object.assign({},state,{data:action.payload});\r\n        case actionsTypes.FETCH_BORDERS:\r\n            return Object.assign({},state,{borders:action.payload})\r\n        case actionsTypes.FETCH_COUNTRY:\r\n            return Object.assign({},state,action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore,applyMiddleware,combineReducers} from 'redux';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {uiReducer,dataReducer} from './reducers';\r\nimport thunkMiddleware from 'redux-thunk';\r\n// import {createLogger} from 'redux-logger';\r\n// const logger=createLogger();\r\nconst rootReducer=combineReducers({uiReducer,dataReducer})\r\nconst store=createStore(rootReducer,applyMiddleware(thunkMiddleware));\r\nReactDOM.render(\r\n    <Provider store={store}><App/></Provider>,\r\n  document.getElementById('root')\r\n);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}